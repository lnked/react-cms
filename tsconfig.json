{
    "buildOnSave": false,
    "compileOnSave": true,
    "compilerOptions": {
        "jsx": "react", /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
        "target": "es6", /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'. */
        "module": "commonjs", /* Specify module code generation: 'none', commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
        // "outFile": "./",                                 /* Concatenate and emit output to single file. */
        "outDir": "./dist", /* Redirect output structure to the directory. */
        "allowJs": false, /* Allow javascript files to be compiled. */
        // "checkJs": true,                                 /* Report errors in .js files. */
        "sourceMap": true, /* Generates corresponding '.map' file. */
        "declaration": true, /* Generates corresponding '.d.ts' file. */
        "removeComments": true, /* Do not emit comments to output. */
        "noEmit": true, /* Do not emit outputs. */
        "importHelpers": true, /* Import emit helpers from 'tslib'. */
        "downlevelIteration": true, /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
        "isolatedModules": false, /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
        /* Strict Type-Checking Options */
        "strict": true, /* Enable all strict type-checking options. */
        "skipLibCheck": true,
        "noImplicitAny": false, /* Raise error on expressions and declarations with an implied 'any' type. */
        "noImplicitThis": false, /* Raise error on 'this' expressions with an implied 'any' type. */
        "strictNullChecks": true, /* Enable strict null checks. */
        "alwaysStrict": true, /* Parse in strict mode and emit "use strict" for each source file. */
        /* Additional Checks */
        "noUnusedLocals": true, /* Report errors on unused locals. */
        "noUnusedParameters": true, /* Report errors on unused parameters. */
        "noImplicitReturns": true, /* Report error when not all code paths in function return a value. */
        "noFallthroughCasesInSwitch": true, /* Report errors for fallthrough cases in switch statement. */
        /* Module Resolution Options */
        "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        "baseUrl": "./", /* Base directory to resolve non-absolute module names. */
        "preserveSymlinks": true, /* Do not resolve the real path of symlinks. */
        "allowSyntheticDefaultImports": true, /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        "paths": { /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
            "*": [
                "node_modules/@types/*"
            ],
            "hocs": [
                "./app/hocs"
            ],
            "segments": [
                "./app/segments"
            ],
            "layouts": [
                "./app/layouts"
            ],
            "variables": [
                "./app/variables"
            ],
            "containers": [
                "./app/containers"
            ],
            "components": [
                "./app/components"
            ],
            "typings": [
                "./app/typings"
            ],
            "assets": [
                "./app/assets"
            ],
            "utils": [
                "./app/utils"
            ],
            "config": [
                "./app/config"
            ],
            "styles": [
                "./app/assets/styles"
            ],
            "images": [
                "./app/assets/images"
            ],
            "scripts": [
                "./app/assets/scripts"
            ],
            "svgstore": [
                "./app/assets/svgstore"
            ],
            "store": [
                "./app/redux/store"
            ],
            "actions": [
                "./app/redux/actions"
            ],
            "reducers": [
                "./app/redux/reducers"
            ]
        },
        "types": [ /* Type declaration files to be included in compilation. */
            "node",
            "jest",
            "react",
            "core-js",
            "enzyme",
            "jest-styled-components",
            "styled-components"
        ],
        "typeRoots": [ /* List of folders to include type definitions from. */
            "./typings",
            "./node_modules/@types"
        ],
        /* Source Map Options */
        "sourceRoot": "./", /* Specify the location where debugger should locate TypeScript files instead of source locations. */
        "mapRoot": "./", /* Specify the location where debugger should locate map files instead of generated locations. */
        "inlineSourceMap": false, /* Emit a single file with source maps instead of having a separate file. */
        "inlineSources": false, /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
        /* Experimental Options */
        "experimentalDecorators": true, /* Enables experimental support for ES7 decorators. */
        "emitDecoratorMetadata": true, /* Enables experimental support for emitting type metadata for decorators. */
        "lib": [ /* Specify library files to be included in the compilation:  */
            "dom",
            "es5",
            "esnext",
            "es2015.core",
            "es2015.collection",
            "es2015.symbol",
            "es2015.iterable",
            "es2015.promise"
        ]
    },
    "files": [
        "./typings/json.d.ts"
    ],
    "filesGlob": [
        "./app/**/*.ts",
        "./app/**/*.tsx",
        "./app/**/*.scss",
        "!node_modules/**/*"
    ],
    "include": [
        "./app/**/*"
    ],
    "exclude": [
        ".git",
        "dist",
        "tests",
        "webpack",
        "typings",
        "coverage",
        "node_modules"
    ],
    "awesomeTypescriptLoaderOptions": {
        "useCache": true,
        "useBabel": true,
        "forkChecker": true,
        "transpileOnly": false,
        "useWebpackText": true,
        "errorsAsWarnings": true,
        "useTranspileModule": true
    }
}
